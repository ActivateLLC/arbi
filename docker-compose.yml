version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:14-alpine
    container_name: arbi-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: arbi
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - arbi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: arbi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - arbi-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API service
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: arbi-api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - NODE_ENV=development
      - LOG_LEVEL=info
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=arbi
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_SSL=false
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - REDIS_PREFIX=arbi:
    volumes:
      - ./apps/api:/app/apps/api
      - ./packages:/app/packages
      - node_modules:/app/node_modules
    networks:
      - arbi-network
    command: pnpm dev

networks:
  arbi-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  node_modules:
